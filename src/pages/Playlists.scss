$custom-color: var(--custom-color);
$secondary-color: var(--secondary-color);
$tertiary-color: var(--secondary-color);
@import "../global_styles/abstract/variables.scss";

@import "../global_styles/abstract/variables.scss";

.connectText {
    position: relative;
    max-width: 425px;
    margin-left: calc(8.7vw + 2.5px);
    font-weight: 300;
    font-size: calc(0.75vw + 1.25rem);
    letter-spacing: 2px;
  
    @include breakpoint(md) {
      max-width: 500px;
      margin-top: calc(2.8vw + 130px);
    }
  }
  
  .center {
    display: flex;
    flex-direction: column;
    align-items: center;
  }
  

.orchid-container {
    background-color: $custom-color; // Use the CSS variable for background color
    display: flex;
    flex-direction: column;
    margin-top: 80px;
    height: 85vh;
    display: flex;
    align-items: center; /* Center vertically */
    justify-content: center; /* Center horizontally */
    position: relative; /* Add position relative */
}

.tags {
    margin-top: 50px;
    display: flex;
    gap: 20px;
    overflow-x: auto; /* Enable horizontal scrolling */
    margin-bottom: 10px; /* Add some margin to the bottom for spacing */
    padding: 0 10px; /* Add padding to prevent tags from sticking to the edges */
    max-width: calc(100% - 20px); /* Limit maximum width to prevent horizontal scrolling of overlay */
}

.tags button {
  background-color: #fff;
  color: #000;
  border: none;
  padding: 20px 30px; /* Increase padding */
  border-radius: 40px; /* Increase border radius */
  cursor: pointer;
  font-size: 22px; /* Increase font size */
  white-space: nowrap; /* Prevent text from wrapping */
}

body,
html {
  font-family: "Poppins", sans-serif;
  -webkit-text-size-adjust: 100%;
  -webkit-tap-highlight-color: transparent;
  -webkit-font-smoothing: antialiased;
  text-rendering: optimizeLegibility;
  font-weight: bold;
  color: black;
}
.arrow {
    position: absolute;
    top: 50%;
    transform: translateY(-50%);
    width: 20px;
    height: 20px;
    border-radius: 50%;
    cursor: pointer;
}

.arrow.left {
    left: 0;
}

.arrow.right {
    right: 0;
}

.arrow:before {
    content: '';
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    width: 6px;
    height: 6px;
    border-top: 2px solid white;
    border-right: 2px solid white;
    transform: rotate(45deg);
}

.arrow.right:before {
    transform: rotate(-135deg);
}

  /* Define styles for the specific div with class "custom-div" */
.custom-div {
    position: relative;
    display: flex;
    flex-direction: row;
    align-items: flex-end;
    justify-content: center;
    min-width: 650px;
    min-height: 400px;
    max-width: 650px;
    max-height: 400px;
    background: linear-gradient(
        35deg,
        white 0%,
        white 84.7%,
        $custom-color 85%,
        $custom-color 91%,
        white 91.3%
      );    box-shadow: 0 10px 60px 0 $secondary-color, inset 0px -10px 17px 2px $custom-color;
    border-radius: 25px;
    z-index: 1; /* Adjust z-index to bring the custom-div above other elements */
  }
  
  .custom-div::before {
    position: absolute;
    backdrop-filter: blur(15px);
    bottom: -40px;
    right: -45px;
    width: 140px;
    height: 140px;
    content: "";
    border-radius: 800px;
    background: #ffffff66;
    box-shadow: 0 10px 30px $secondary-color, inset 0px -8px 15px 0px $tertiary-color; /* Adjusted box-shadow values */
    border: 0.1px solid transparent;
  }
  
  .custom-div > p {
    position: relative;
    right: -10px;
    bottom: 15px;
    font-size: 60pt;
    font-weight: bolder;
    margin: 0;
    padding: 20px 35px 10px 25px;
    line-height: 36pt;
    text-align: center;
    color: $custom-color;
    align-self: center;
    order: 2;
  }
  
  .custom-div > p > span {
    position: absolute;
    bottom: -5px;
    left: 15%;
    width: 70%;
    height: 20px;
    background: $custom-color;
    content: "";
    z-index: -1;
  }
  
  .custom-div > p > i {
    color: white;
    display: block; /* Ensure the span is a block element */
    margin-top: 30px;
    text-shadow: 1px 1px 0px $custom-color, 2px 2px 0px $custom-color,
      3px 3px 0px $custom-color, -1px -1px 0px $custom-color;
  }

  .custom-image-container {
    all: unset;
    position: relative;
    width: 300px;
    height: 300px;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    margin: 35px 0px 40px 30px;
    border-radius: 15px;
    background-size: cover;
    background-position: center;
    z-index: -1;
  }
  
  .custom-image-container::before {
    all: unset;
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    content: "";
  }
  .custom-image-container img {
    border: 2px solid #3d0d49;
    max-width: 100%; /* Ensure the image doesn't exceed the container width */
    max-height: 100%; /* Ensure the image doesn't exceed the container height */
    border-radius: 15px; /* Match the border radius of the container */
  }
  .custom-image-container::after {
    all: unset;
  }
  
  .overlayStats{
    position: fixed; // or `absolute` depending on your needs
    top: 0;
    left: 0;
    width: 100vw;
    height: 100vh;
    background-color: rgba(0, 0, 0, 0.75); // semi-transparent background
    z-index: 10; // Ensure it's above other content
    display: flex;
    justify-content: center;
    align-items: center;
  }

  .allPlaylistsContainer{
    margin-top: 20px;
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 5%;
    
  }
  .playlistIcon{
    display: flex;
    align-items: center;
    width: 150px;
    height: 150px;
    cursor: pointer;
    background: linear-gradient(-45deg, #4B0082, #ff6ea1, purple , pink);
    background-size: 400% 400%; /* Adding this line */
    animation: gradient 15s ease infinite;
    border-radius: 4px;
    @keyframes gradient {
      0% {
        background-position: 0% 50%;
      }
      50% {
        background-position: 100% 50%;
      }
      100% {
        background-position: 0% 50%;
      }
    }

    box-shadow: 0 10px 40px rgba(0, 0, 0, 0.5); /* Add box shadow */
  }
  

  .playlistTitle{
    margin-top: 5%;
    transform: translate(-1%, 0);
  }
  .wrapper{
    display: flex;
    justify-content: center;
    align-items: center;

  }
  //https://codepen.io/sabin42/pen/odjvKy
  .loader{
     border-radius: 50%;
    position: relative;
    margin-top: 20vh;
    display: inline-block;
    align-items: center;
    justify-content: center;
    height: 0px;
    width: 0px;
  }
  
  .loader span{
      position: absolute;
      display: block;
      background: #ddd;
      height: 40px;
      width: 40px;
      border-radius: 50%;
      perspective: 100000px;
  }
  .loader span:nth-child(1) {
      left:125px;
      animation: bounce2 1s cubic-bezier(0.04, 0.35, 0, 1) infinite;
      animation-delay: 0s;
      background: #ff756f;
  }
  .loader span:nth-child(2) {
      left:50px;
      animation: bounce2 1s cubic-bezier(0.04, 0.35, 0, 1) infinite;
      animation-delay: .2s;
      background: #ffde6f;
  }
  .loader span:nth-child(3) {
      left: -25px;
      animation: bounce2 1s cubic-bezier(0.04, 0.35, 0, 1) infinite;
      animation-delay: .4s;
      background: #01de6f;
  }
  .loader span:nth-child(4) {
      left: -100px;
      animation: bounce2 1s cubic-bezier(0.04, 0.35, 0, 1) infinite;
      animation-delay: .6s;
      background: #6f75ff;
  }
  
  @keyframes bounce2 {
      0%, 56%, 100% {
          transform: translateY(0px);
      }
      25% {
          transform: translateY(-30px);
      }
  }

