@import "./base/reset";

@import "../components/CustomButtons/Button.module.scss";
@import "./abstract/variables.scss";
@import "./abstract/colors.scss";

/*Change highlight color:
https://stackoverflow.com/questions/34289991/change-default-selection-color-using-css*/
::-moz-selection {
  background: $pink;
}
::-webkit-selection {
  background: $pink;
}
::selection {
  background: $pink;
}
main {
  height: calc(100vh - #{$header-height});
  display: flex;
  justify-content: center;
  align-items: center;

  .intro {
    font-size: 38px;
    text-align: center;
    font-weight: 700;
    color: $text2;
    padding: $spacing-md $spacing-lg;
    border-radius: $spacing-sm;
    box-shadow: 0 0 10px $primary;
    margin: 0 $spacing-md;

    margin-top: -$header-height;

    &__focus {
      color: $primary;
    }

    @include breakpoint(md) {
      font-size: 42px;
    }
  }
}

a:any-link{
  text-decoration-color: $primary;
}

button {
  // reset to default
  font-family: inherit;
  outline: none;
  border: none;
  background: none;
  letter-spacing: inherit;
  color: $bg2;
  font-size: inherit;
  text-align: inherit;
  padding: 0;
}

.ipodContainer {
  display: none;
  @include breakpoint(md) {
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: flex-end;
    margin-right: 0vw;
    margin-top: -225px;
  }
  @include breakpoint(xl) {
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: flex-end;
    margin-right: 8.7vw;
    margin-top: -225px;
  }
}

.main-text {
  position: absolute;
  max-width: 600px;
  margin-left: 8.7vw;
  font-weight: 600;
  font-size: calc(1.5vw + 3rem);
  line-height: calc(1.5vw + 3.5rem);

  @include breakpoint(md) {
    max-width: 715px;
  }
}

.l_container {
  width: 100%;
  display: flex;
  flex-direction: column;
}

.listen_list_containter {
  display: flex;
  flex-direction: column;

}

.listen_list_header {
  font-size: 32px;
  //margin-left: 10%;
  margin-top: 5px;
}

.listen_list_boxes {
  display: flex;
  flex-direction: row;
  height: 300px;
  //width: 150px;
  gap: 3px;
}

.listen_list_box {
  display:flex;
  flex-direction: column;
  align-items: center;
  margin: auto;
  width: 300px;
  height: 100%;
  border-radius: 10px;
  cursor: pointer;
  &__text {
      font-size: 25px; 
      margin: auto;
  }
}

.light {
  .listen_list_header {
      color: $darkest-purple;
  }
  .listen_list_box {
      background: $dark-purple;
  }
}

.dark {
  .listen_list_header {
      color: $white;
  }
  .listen_list_box {
      background: $pink;
  }
}

.subtitle {
  position: absolute;
  max-width: 425px;
  margin-left: calc(8.7vw + 2.5px);
  margin-top: 6em;
  font-weight: 300;
  font-size: calc(0.75vw + 1.25rem);
  letter-spacing: 2px;

  @include breakpoint(md) {
    max-width: 500px;
    margin-top: calc(2.8vw + 130px);
  }
}

.star{
  cursor: pointer;
}

.light {
  background-color: $bg2;
  span {
    color: $darkest-purple; // normal
  }
  html {
    background-color: $bg2;
  }
  .theme-container {
    color: $darkest-purple;
  }
  .theme-toggle {
    background-color: $darkest-purple;
  }
}   

.dark {
  background-color: $darkest-purple;
  color: $white;
  span {
    color: $white; // normal
  }
  html {
    background-color: $darkest-purple;
  }
  .theme-container {
    color: $white;
  }
  .theme-toggle {
    background-color: $white;
    color: $darkest-purple;
  }
}

.theme-container {
  position: absolute;
  bottom: 3%;
  left: 46%;
  font-weight: 300;
  font-size: 30px;
  letter-spacing: 7px;
  // Set the color of the button text based on the theme mode
}

h1{
  font-weight: 800;
  font-size: 7vw;
  line-height: 1;
  color: $purple-gray;
  text-align: center;
  -webkit-text-stroke: 2px $purple-gray;
  -webkit-text-fill-color: transparent;
  color: transparent;
}

[type="checkbox"]:checked,
[type="checkbox"]:not(:checked){
  position: absolute;
  left: -9999px;
}
.menu-icon:checked + label,
.menu-icon:not(:checked) + label{
  position: fixed;
  top: 633px;
  right: 75px;
  display: block;
  width: 30px;
  height: 30px;
  padding: 0;
  margin: 0;
  cursor: pointer;
  z-index: 10;
  @include breakpoint(md) {
    display: none;
  }
}
.menu-icon:checked + label:before,
.menu-icon:not(:checked) + label:before{
  position: absolute;
  content: '';
  display: block;
  width: 30px;
  height: 20px;
  z-index: 20;
  top: 0;
  left: 0;
  border-top: 2px solid $white;
  border-bottom: 2px solid $white;
  transition: border-width 100ms 1500ms ease, 
    top 100ms 1600ms cubic-bezier(0.23, 1, 0.32, 1),
    height 100ms 1600ms cubic-bezier(0.23, 1, 0.32, 1), 
    background-color 200ms ease,
    transform 200ms cubic-bezier(0.23, 1, 0.32, 1);
  
}
.menu-icon:checked + label:after,
.menu-icon:not(:checked) + label:after{
  position: absolute;
  content: '';
  display: block;
  width: 22px;
  height: 2px;
  z-index: 20;
  top: 10px;
  right: 4px;
  background-color: $white;
  margin-top: -1px;
  transition: width 100ms 1750ms ease, 
    right 100ms 1750ms ease,
    margin-top 100ms ease, 
    transform 200ms cubic-bezier(0.23, 1, 0.32, 1);
}
.menu-icon:checked + label:before{
  top: 10px;
  transform: rotate(45deg);
  height: 2px;
  background-color: $white;
  border-width: 0;
  transition: border-width 100ms 340ms ease, 
    top 100ms 300ms cubic-bezier(0.23, 1, 0.32, 1),
    height 100ms 300ms cubic-bezier(0.23, 1, 0.32, 1), 
    background-color 200ms 500ms ease,
    transform 200ms 1700ms cubic-bezier(0.23, 1, 0.32, 1);
}
.menu-icon:checked + label:after{
  width: 30px;
  margin-top: 0;
  right: 0;
  transform: rotate(-45deg);
  transition: width 100ms ease,
    right 100ms ease,  
    margin-top 100ms 500ms ease, 
    transform 200ms 1700ms cubic-bezier(0.23, 1, 0.32, 1);
}

.nav{
  position: fixed;
  top: 603px;
  right: 50px;
  display: block;
  width: 80px;
  height: 80px;
  padding: 0;
  margin: 0;
  z-index: 9;
  overflow: hidden;
  box-shadow: 0 8px 30px 0 rgba(0,0,0,0.3);
  background-color: $dark-purple;
  animation: border-transform 7s linear infinite;
  @include breakpoint(md) {
    display: none;
  }
  transition: top 350ms 1100ms cubic-bezier(0.23, 1, 0.32, 1),  
    right 350ms 1100ms cubic-bezier(0.23, 1, 0.32, 1),
    transform 250ms 1100ms ease,
    width 650ms 400ms cubic-bezier(0.23, 1, 0.32, 1),
    height 650ms 400ms cubic-bezier(0.23, 1, 0.32, 1);
}
@keyframes border-transform{
  0%,100% { border-radius: 63% 37% 54% 46% / 55% 48% 52% 45%; } 
  14% { border-radius: 40% 60% 54% 46% / 49% 60% 40% 51%; } 
  28% { border-radius: 54% 46% 38% 62% / 49% 70% 30% 51%; } 
  42% { border-radius: 61% 39% 55% 45% / 61% 38% 62% 39%; } 
  56% { border-radius: 61% 39% 67% 33% / 70% 50% 50% 30%; } 
  70% { border-radius: 50% 50% 34% 66% / 56% 68% 32% 44%; } 
  84% { border-radius: 46% 54% 50% 50% / 35% 61% 39% 65%; } 
}

.menu-icon:checked ~ .nav {
  animation-play-state: paused;
  top: 50%;
  right: 50%;
  transform: translate(50%, -50%);
  width: 200%;
  height: 200%;
  transition: top 350ms 700ms cubic-bezier(0.23, 1, 0.32, 1),  
    right 350ms 700ms cubic-bezier(0.23, 1, 0.32, 1),
    transform 250ms 700ms ease,
    width 750ms 1000ms cubic-bezier(0.23, 1, 0.32, 1),
    height 750ms 1000ms cubic-bezier(0.23, 1, 0.32, 1);
}

.nav ul{
  position: absolute;
  top: 50%;
  left: 0;
  display: block;
  width: 100%;
  padding: 0;
  margin: 0;
  z-index: 6;
  text-align: center;
  transform: translateY(-50%);
  list-style: none;
}
.nav ul li{
  position: relative;
  display: block;
  width: 100%;
  padding: 0;
  margin: 10px 0;
  text-align: center;
  list-style: none;
  pointer-events: none;
  opacity: 0;
  visibility: hidden;
  transform: translateY(30px);
  transition: all 250ms linear;
}
.nav ul li:nth-child(1){
  transition-delay: 200ms;
}
.nav ul li:nth-child(2){
  transition-delay: 150ms;
}
.nav ul li:nth-child(3){
  transition-delay: 100ms;
}
.nav ul li:nth-child(4){
  transition-delay: 50ms;
}
.nav ul li a{
  font-size: 9vh;
  text-transform: uppercase;
  line-height: 1.2;
  font-weight: 800;
  display: inline-block;
  position: relative;
  color: $white;
  transition: all 250ms linear;
  text-decoration: none;
}
.nav ul li a:hover{
  text-decoration: none;
  color: $dark-purple;
}
.dark {
  .nav {
    background-color: $pink;
  }
  .nav ul li a {
    color: $white;
  }
  .nav ul li a:hover{
    text-decoration: none;
    color: $darkest-purple;
  }
}
.nav ul li a:after{
  display: block;
  position: absolute;
  top: 50%;
  content: '';
  height: 2vh;
  margin-top: -1vh;
  width: 0;
  left: 0;
  background-color: $darkest-purple;
  opacity: 0.8;
  transition: width 250ms linear;
}
.nav ul li a:hover:after{
  width: 100%;
}


.menu-icon:checked ~ .nav  ul li {
  pointer-events: auto;
  visibility: visible;
  opacity: 1;
  transform: translateY(0);
  transition: opacity 350ms ease,
    transform 250ms ease;
}
.menu-icon:checked ~ .nav ul li:nth-child(1){
  transition-delay: 1200ms;
}
.menu-icon:checked ~ .nav ul li:nth-child(2){
  transition-delay: 1280ms;
}
.menu-icon:checked ~ .nav ul li:nth-child(3){
  transition-delay: 1360ms;
}
.menu-icon:checked ~ .nav ul li:nth-child(4){
  transition-delay: 1440ms;
}
.menu-icon:checked ~ .nav ul li:nth-child(5){
  transition-delay: 1520ms;
}
.menu-icon:checked ~ .nav ul li:nth-child(6){
  transition-delay: 1600ms;
}

@media screen and (max-width: 991px) {
  .menu-icon:checked + label,
  .menu-icon:not(:checked) + label{
    right: 55px;
  }
  .logo {
    left: 30px;
  }
  .nav{
    right: 30px;
  }
  
  
  .nav ul li a{
    font-size: calc(4vh + 3vw);
    
  }
}
svg {
  fill: var(--fill);
  transition: 200ms ease-in-out;
}

/* Apply the theme toggle button styles */
.theme-toggle {
  position: fixed;
  left: 0;
  top: 50%;
  transform: translateY(-50%);
  background-color: rgb(0, 0, 0);
  color: white;
  padding: 10px;
  font-size: 16px;
  border: none;
  border-radius: 0 20px 20px 0;
  cursor: pointer;
  transition: background-color 0.3s ease, transform 0.3s ease;
}

/* Sun and Moon Icons Inside the Button */
.theme-toggle svg {
  fill: currentColor;
  transition: opacity 0.3s ease-in-out, transform 0.3s ease-in-out;
}

/* Set the default state for both icons */
.theme-toggle .sun,
.theme-toggle .moon {
  opacity: 0; /* Start with the icons hidden */
  transform: scale(1); /* Keep them at natural size but allow for scaling */
}

/* When the 'dark' class is applied to the root, manage the icons' visibility and scale */
.dark .sun {
  opacity: 1; /* Show sun */
}

.light .moon {
  opacity: 1; /* Show moon */
}

/* Example of handling hover states with scale, if desired */
.theme-toggle:hover .sun,
.theme-toggle:hover .moon {
  transform: scale(1.3); /* Slightly larger on hover, for both icons */
}

