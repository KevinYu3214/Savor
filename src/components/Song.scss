@use "../global_styles/abstract/colors" as *;
@import "../global_styles/abstract/variables.scss";

.songContainer {
  display: flex;
  flex-direction: column;
  margin: auto;
  margin-top: 10px;
  margin-bottom: 50px;
  width: 65vw;
  height: 75vh;
  background: white;
  padding-top: 10px;
  border-radius: 1vh;
  position: relative;

  .loadingOverlay {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: rgba(255, 255, 255, 0.8);
    display: flex;
    justify-content: center;
    align-items: center;
    font-size: 20px;
    color: #102770;
    z-index: 10;
  }

  .songInfo {
    display: flex;
    flex-direction: row;
    color: black;
  }

  .songImageContainer {
    position: relative;
    width: 150px;
    transform: translate(5%, 0%);
  }

  .songImage {
    opacity: 1;
    display: block;
    width: 150px;
    height: 150px;
    transition: .5s ease;
    backface-visibility: hidden;
  }

  .playButton {
    transition: .5s ease;
    width: 100px;
    height: 100px;
    padding-left: 10px;
    opacity: 0;
    position: absolute;
    backface-visibility: visible;
    transform: translate(25%, -125%);
    cursor: pointer;
  }

  .noSampleBox {
    transition: .5s ease;
    transform: translate(0%, -100%);
    width:100%;
    height:20%;
    text-align:center;
    font-size: 30px;
    color: white;
    background-color: black;
    opacity: 0;
  }

  .songText {
    padding-left: 10px;
    font-size: calc(.8vw + 0.9rem);
    background: linear-gradient($dark-purple, pink);
    background-clip: text;
    -webkit-text-fill-color: transparent;
  }

  .songTitle {
    text-transform: uppercase;
    font-weight: 900;
    font-size: calc(2vw + 1.2rem);
  }

  .songAlbum {
  }

  .artistImage {
    width: 150px;
    height: 150px;
    transform: translate(7px, 10px);
    border-radius: 100px;
  }

  .artistInfo {
    display: flex;
    flex-direction: row;
    color: black;
  }

  .artistName {
    color: black;
    padding-left: 10px;
    padding-top: 10px;
    font-size: calc(.9vw + 0.9rem);
    transform: translate(10px, 50px);
    background: linear-gradient($dark-purple, pink);
    font-weight: 500;
    background-clip: text;
    -webkit-text-fill-color: transparent;
  }

  .songImageContainer:hover .songImage {
    opacity: .3;
  }

  .songImageContainer:hover .noSampleBox {
    opacity: .7;
  }

  .songImageContainer:hover .playButton {
    opacity: 1;
  }

  .sec-center {
    position: relative;
    max-width: 220px;
    margin: auto;
    text-align: center;
    z-index: 200;
  }

  .dropdown:checked + label,
  .dropdown:not(:checked) + label {
    position: relative;
    display: flex;
    align-items: center;
    justify-content: center;
    height: 50px;
    width: 220px;
    background-color: #e88eed;
    color: #102770;
    font-size: 15px;
    border-radius: 4px;
    cursor: pointer;
    box-shadow: 0 12px 35px rgba(255,235,167,.15);
  }

  .section-dropdown {
    position: absolute;
    top: 70px;
    left: 0;
    width: 220px;
    background-color: #111;
    border-radius: 4px;
    box-shadow: 0 14px 35px rgba(9,9,12,0.4);
    z-index: 2;
    opacity: 0;
    pointer-events: none;
    transform: translateY(20px);
    transition: all 200ms linear;
  }

  .dropdown-link {
    display: flex;
    justify-content: space-between;
    width: 100%;  
    color: #fff;
    padding: 15px 20px;
    text-decoration: none;
    align-items: center;
    transition: color 0.3s, background-color 0.3s;

    &:hover {
      background-color: #292929; // Slightly lighter than the dropdown background
      color: #e88eed; // Contrast color for text on hover
    }

    .toggle-icon {
      transition: transform 150ms ease;
    }

    &.active .toggle-icon {
      transform: rotate(135deg); // Indicates an "active" state with a rotated icon
    }
  }

  .dropdown:checked ~ .section-dropdown {
    opacity: 1;
    pointer-events: auto;
    transform: translateY(0);
  }

  .addFirebaseButton, .deleteButton {
    font-size: 1rem;
    padding: 10px 20px;
    margin-top: 15px;
    border: none;
    border-radius: 5px;
    cursor: pointer;
    transition: background-color 0.3s ease;
    align-self: center; // Center the button within its container
  }

  .addFirebaseButton {
    background-color: #e5d0ec; // Green background for "add" action
    color: black;

    &:hover {
      background-color: #d8a2ea;
    }
  }

  .deleteButton {
    background-color: #d7d7d7; // Red background for "delete" action
    color: black;
    margin-left: 10px; // Add some space between the add and delete buttons

    &:hover {
      background-color: #8a8a8a;
    }
  }
  
  input, textarea {
    width: calc(100% - 20px); // Full width minus padding
    padding: 10px;
    margin-top: 10px; // Space between inputs
    border: 1px solid #ccc; // Light grey border
    border-radius: 4px; // Rounded borders for aesthetics
    box-sizing: border-box; // Box sizing to include padding and border in element's width and height
  }

  textarea {
    height: 100px; // Fixed height for the textarea
    resize: none; // Disable resizing of the textarea
  }

  // Loading Overlay Styling
  .loadingOverlay {
    display: flex;
    justify-content: center;
    align-items: center;
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: rgba(0, 0, 0, 0.5);
    color: #fff;
    font-size: 1.5rem;
    z-index: 100; // Make sure it's above everything
  }
}
